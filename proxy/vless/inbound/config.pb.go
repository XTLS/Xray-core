// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: proxy/vless/inbound/config.proto

package inbound

import (
	protocol "github.com/xtls/xray-core/common/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Fallback struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Alpn          string                 `protobuf:"bytes,2,opt,name=alpn,proto3" json:"alpn,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Dest          string                 `protobuf:"bytes,5,opt,name=dest,proto3" json:"dest,omitempty"`
	Xver          uint64                 `protobuf:"varint,6,opt,name=xver,proto3" json:"xver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fallback) Reset() {
	*x = Fallback{}
	mi := &file_proxy_vless_inbound_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fallback) ProtoMessage() {}

func (x *Fallback) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_vless_inbound_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fallback.ProtoReflect.Descriptor instead.
func (*Fallback) Descriptor() ([]byte, []int) {
	return file_proxy_vless_inbound_config_proto_rawDescGZIP(), []int{0}
}

func (x *Fallback) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Fallback) GetAlpn() string {
	if x != nil {
		return x.Alpn
	}
	return ""
}

func (x *Fallback) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Fallback) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Fallback) GetDest() string {
	if x != nil {
		return x.Dest
	}
	return ""
}

func (x *Fallback) GetXver() uint64 {
	if x != nil {
		return x.Xver
	}
	return 0
}

type Config struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Clients []*protocol.User       `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	// Decryption settings. Only applies to server side, and only accepts "none"
	// for now.
	Decryption    string      `protobuf:"bytes,2,opt,name=decryption,proto3" json:"decryption,omitempty"`
	Fallbacks     []*Fallback `protobuf:"bytes,3,rep,name=fallbacks,proto3" json:"fallbacks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_proxy_vless_inbound_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_vless_inbound_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_proxy_vless_inbound_config_proto_rawDescGZIP(), []int{1}
}

func (x *Config) GetClients() []*protocol.User {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *Config) GetDecryption() string {
	if x != nil {
		return x.Decryption
	}
	return ""
}

func (x *Config) GetFallbacks() []*Fallback {
	if x != nil {
		return x.Fallbacks
	}
	return nil
}

var File_proxy_vless_inbound_config_proto protoreflect.FileDescriptor

const file_proxy_vless_inbound_config_proto_rawDesc = "" +
	"\n" +
	" proxy/vless/inbound/config.proto\x12\x18xray.proxy.vless.inbound\x1a\x1acommon/protocol/user.proto\"\x82\x01\n" +
	"\bFallback\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04alpn\x18\x02 \x01(\tR\x04alpn\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x12\n" +
	"\x04dest\x18\x05 \x01(\tR\x04dest\x12\x12\n" +
	"\x04xver\x18\x06 \x01(\x04R\x04xver\"\xa0\x01\n" +
	"\x06Config\x124\n" +
	"\aclients\x18\x01 \x03(\v2\x1a.xray.common.protocol.UserR\aclients\x12\x1e\n" +
	"\n" +
	"decryption\x18\x02 \x01(\tR\n" +
	"decryption\x12@\n" +
	"\tfallbacks\x18\x03 \x03(\v2\".xray.proxy.vless.inbound.FallbackR\tfallbacksBj\n" +
	"\x1ccom.xray.proxy.vless.inboundP\x01Z-github.com/xtls/xray-core/proxy/vless/inbound\xaa\x02\x18Xray.Proxy.Vless.Inboundb\x06proto3"

var (
	file_proxy_vless_inbound_config_proto_rawDescOnce sync.Once
	file_proxy_vless_inbound_config_proto_rawDescData []byte
)

func file_proxy_vless_inbound_config_proto_rawDescGZIP() []byte {
	file_proxy_vless_inbound_config_proto_rawDescOnce.Do(func() {
		file_proxy_vless_inbound_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proxy_vless_inbound_config_proto_rawDesc), len(file_proxy_vless_inbound_config_proto_rawDesc)))
	})
	return file_proxy_vless_inbound_config_proto_rawDescData
}

var file_proxy_vless_inbound_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proxy_vless_inbound_config_proto_goTypes = []any{
	(*Fallback)(nil),      // 0: xray.proxy.vless.inbound.Fallback
	(*Config)(nil),        // 1: xray.proxy.vless.inbound.Config
	(*protocol.User)(nil), // 2: xray.common.protocol.User
}
var file_proxy_vless_inbound_config_proto_depIdxs = []int32{
	2, // 0: xray.proxy.vless.inbound.Config.clients:type_name -> xray.common.protocol.User
	0, // 1: xray.proxy.vless.inbound.Config.fallbacks:type_name -> xray.proxy.vless.inbound.Fallback
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proxy_vless_inbound_config_proto_init() }
func file_proxy_vless_inbound_config_proto_init() {
	if File_proxy_vless_inbound_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proxy_vless_inbound_config_proto_rawDesc), len(file_proxy_vless_inbound_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proxy_vless_inbound_config_proto_goTypes,
		DependencyIndexes: file_proxy_vless_inbound_config_proto_depIdxs,
		MessageInfos:      file_proxy_vless_inbound_config_proto_msgTypes,
	}.Build()
	File_proxy_vless_inbound_config_proto = out.File
	file_proxy_vless_inbound_config_proto_goTypes = nil
	file_proxy_vless_inbound_config_proto_depIdxs = nil
}
